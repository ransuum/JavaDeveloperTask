plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.avast.gradle.docker-compose' version '0.14.5'
    id 'com.google.protobuf' version '0.8.13'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
def grpcVersion = '1.62.2'
def protobufVersion = '4.26.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.github.lognet:grpc-spring-boot-starter:5.1.5'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.auth0:java-jwt:4.4.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
}

tasks.named('test') {
    useJUnitPlatform()
}
dockerCompose {
    useComposeFiles = [file('docker-compose.yml')] as List<String>
}
protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protobufVersion}"}
    plugins{
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"}
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

